import { createGroup,
        addGroupMembers, 
        getUserGroups, 
        getGroupById,
        getGroupMembers,
        getAllGroups,
        sendJoinRequest, 
        getJoinRequests, 
        handleJoinRequest,
        removeMemberFromGroup,
        addGroupPost,
        cancelJoinRequest
     } from "../models/groupModel.js";
import db from "../db.js";
// API t·∫°o nh√≥m
export const createNewGroup = async (req, res) => {
    try {
        const { name, created_by, members } = req.body;
        if (!name || !created_by || !Array.isArray(members) || members.length === 0) {
            return res.status(400).json({ success: false, message: "Thi·∫øu th√¥ng tin nh√≥m." });
        }

        const avatar = req.file ? `uploads/groups/${req.file.filename}` : null;
        console.log("üìå D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", { name, created_by, members, avatar });

        const groupId = await createGroup(name, created_by, avatar);
        console.log("‚úÖ Nh√≥m t·∫°o th√†nh c√¥ng, ID:", groupId);

        await addGroupMembers(groupId, [...members, created_by]);
        console.log("‚úÖ Th√†nh vi√™n ƒë√£ ƒë∆∞·ª£c th√™m v√†o nh√≥m!");

        res.status(201).json({ success: true, message: "Nh√≥m ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng", groupId, avatar });
    } catch (error) {
        console.error("‚ùå L·ªói t·∫°o nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói t·∫°o nh√≥m.", error: error.message });
    }
};

// API l·∫•y danh s√°ch nh√≥m c·ªßa ng∆∞·ªùi d√πng
export const getGroupsByUser = async (req, res) => {
    try {
        const { userId } = req.params;
        const groups = await getUserGroups(userId);
        res.json(groups);
    } catch (error) {
        console.error("‚ùå L·ªói l·∫•y danh s√°ch nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói l·∫•y danh s√°ch nh√≥m." });
    }
};


// API l·∫•y th√¥ng tin chi ti·∫øt c·ªßa nh√≥m
export const getGroupDetail = async (req, res) => {
    try {
        const { groupId } = req.params;
        const group = await getGroupById(groupId);

        if (!group) {
            return res.status(404).json({ success: false, message: "Nh√≥m kh√¥ng t·ªìn t·∫°i." });
        }

        res.status(200).json({ success: true, group });
    } catch (error) {
        console.error("‚ùå L·ªói l·∫•y th√¥ng tin nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói l·∫•y th√¥ng tin nh√≥m." });
    }
};



// l·∫•y th√†nh vi√™n nh√≥mnh√≥m
export const getMembers = async (req, res) => {
    const { groupId } = req.params;
    
    try {
        const members = await getGroupMembers(groupId);
        res.json({ success: true, members });
    } catch (error) {
        res.status(500).json({ success: false, message: "L·ªói l·∫•y danh s√°ch th√†nh vi√™n", error });
    }
};


//LAY TAT CA HOI NHOM
export const getAllGroupList = async (req, res) => {
    try {
        const groups = await getAllGroups();
        res.status(200).json(groups);
    } catch (error) {
        console.error("L·ªói khi l·∫•y danh s√°ch t·∫•t c·∫£ h·ªôi nh√≥m", error);
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch h·ªôi nh√≥m" });
    }
};

//====================G·ª¨I Y√äU C√ÄUA THAM GIA NH√ìM===============//


// G·ª≠i y√™u c·∫ßu tham gia nh√≥m
export const requestToJoinGroup = async (req, res) => {
    const { groupId } = req.params;
    const { userId, message } = req.body;

    // Ki·ªÉm tra th√¥ng tin tr∆∞·ªõc khi g·ª≠i y√™u c·∫ßu
    if (!groupId || !userId || !message) {
        return res.status(400).json({ success: false, message: "Thi·∫øu th√¥ng tin y√™u c·∫ßu tham gia." });
    }

    try {
        const requestId = await sendJoinRequest(groupId, userId, message);
        res.json({ success: true, message: "ƒê√£ g·ª≠i y√™u c·∫ßu tham gia nh√≥m", requestId });
    } catch (error) {
        console.error("L·ªói g·ª≠i y√™u c·∫ßu tham gia nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói server" });
    }
};


// L·∫•y danh s√°ch y√™u c·∫ßu tham gia nh√≥m (ch·ªâ d√†nh cho tr∆∞·ªüng nh√≥m)
export const fetchJoinRequests = async (req, res) => {
    const { groupId } = req.params;

    try {
        const requests = await getJoinRequests(groupId);
        res.json({ success: true, requests });
    } catch (error) {
        console.error("L·ªói l·∫•y y√™u c·∫ßu tham gia nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói server" });
    }
};

// X·ª≠ l√Ω y√™u c·∫ßu tham gia nh√≥m (ch·∫•p nh·∫≠n ho·∫∑c t·ª´ ch·ªëi)
export const processJoinRequest = async (req, res) => {
    const { requestId } = req.params;
    const { isAccepted } = req.body;

    try {
        await handleJoinRequest(requestId, isAccepted);
        res.json({ success: true });
    } catch (error) {
        console.error("L·ªói x·ª≠ l√Ω y√™u c·∫ßu tham gia nh√≥m:", error);
        res.status(500).json({ success: false, message: "L·ªói server" });
    }
};



// API r·ªùi nh√≥m
export const leaveGroup = async (req, res) => {
    const { groupId } = req.params;
    const { userId } = req.body;

    try {
        // X·ª≠ l√Ω vi·ªác x√≥a th√†nh vi√™n kh·ªèi nh√≥m
        await removeMemberFromGroup(groupId, userId);

        // Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng
        res.json({ success: true, message: "B·∫°n ƒë√£ r·ªùi nh√≥m th√†nh c√¥ng." });
    } catch (error) {
        console.error("L·ªói khi r·ªùi nh√≥m:", error);
        res.status(500).json({ success: false, message: error.message });
    }
};


export const handleCancelJoinRequest = async (req, res) => {
    const { groupId } = req.params;
    const { userId } = req.body;
  
    try {
      const success = await cancelJoinRequest(groupId, userId);
      if (success) {
        return res.json({ success: true, message: "ƒê√£ h·ªßy y√™u c·∫ßu tham gia nh√≥m." });
      }
      return res.status(400).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y y√™u c·∫ßu ƒë·ªÉ h·ªßy." });
    } catch (error) {
      console.error("L·ªói khi h·ªßy y√™u c·∫ßu:", error);
      res.status(500).json({ success: false, message: "C√≥ l·ªói x·∫£y ra." });
    }
  };







//API ƒêƒÉng b√†i l√™n nh√≥m
export const createGroupPost = async (req, res) => {
    try {
        const { group_id, user_id, content } = req.body;
        const media = req.file ? req.file.filename : null;

        const postId = await addGroupPost(group_id, user_id, content, media);
        res.status(201).json({ message: 'ƒêƒÉng b√†i th√†nh c√¥ng!', post_id: postId });
    } catch (error) {
        console.error('L·ªói khi ƒëƒÉng b√†i:', error);
        res.status(500).json({ message: 'L·ªói server', error: error.message });
    }
};

// L·∫•y danh s√°ch b√†i vi·∫øt c·ªßa nh√≥m
export const getGroupPosts = async (req, res) => {
    try {
      const { groupId } = req.params;
      const sql = `
        SELECT gp.*, u.username, u.avatar 
        FROM group_posts gp 
        JOIN users u ON gp.user_id = u.id 
        WHERE gp.group_id = ? 
        ORDER BY gp.created_at DESC
      `;
      const [posts] = await db.query(sql, [groupId]);
      res.status(200).json({ success: true, posts });
    } catch (error) {
      console.error("L·ªói khi l·∫•y b√†i vi·∫øt nh√≥m:", error);
      res.status(500).json({ success: false, message: "L·ªói server", error: error.message });
    }
  };